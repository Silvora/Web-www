/** @format */

import React, { useState } from "react";
import Head from "next/head";
import { GetIsUser, Login } from "../api/login";
import Router from "next/router";
import { setToken } from "../utils/token";
export default function login() {
	//邮箱账号
	// eslint-disable-next-line react-hooks/rules-of-hooks
	const [email, setEmail] = useState("");

	// eslint-disable-next-line react-hooks/rules-of-hooks
	const [emailSection, setEmailSection] = useState(false);

	//密码
	// eslint-disable-next-line react-hooks/rules-of-hooks
	const [password, setPassword] = useState("");
	// eslint-disable-next-line react-hooks/rules-of-hooks
	const [passwordSection, setPasswordSection] = useState(false);

	//验证码
	// eslint-disable-next-line react-hooks/rules-of-hooks
	const [verify, setVerify] = useState("");

	//登录
	// eslint-disable-next-line react-hooks/rules-of-hooks
	const [successSection, setSuccessSection] = useState(false);

	//判断是否有注册
	// eslint-disable-next-line react-hooks/rules-of-hooks
	const [isLogin, setIsLogin] = useState(false);

    //弹窗
    // eslint-disable-next-line react-hooks/rules-of-hooks
    const [isAlert,setAlert] = useState(false)

    // eslint-disable-next-line react-hooks/rules-of-hooks
    const [alertText,setAlertText] = useState("")

	//邮箱正则
	const reg = /^[A-Za-z0-9\u4e00-\u9fa5]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/;
	const onEmailVal = (e: any) => {
		setEmail(e.target.value);
	};

	const handleEmail = () => {
		setEmailSection(true);
		//查看是否有账号
		//setIsLogin(true)
		GetIsUser(email)
			.then((res: any) => {
				console.log(res);
				setIsLogin(res.isLogin);
			})
			.catch((err) => {
				console.log(err);
			});
	};

	const onPasswordVal = (e: any) => {
		setPassword(e.target.value);
	};

	const handlePassword = () => {
		// setVerify('000000')

		let data = {
			email: email,
			password: password,
		};
		Login(data)
			.then((res: any) => {
				console.log(res);
                setPasswordSection(true);
                if(res.isEmail == "false"){
                    setAlertText("邮箱验证码发送失败！！！")
                    setAlert(true)
                }
				//setIsLogin(res.isLogin)
				if (res.isLogin) {
					setSuccessSection(true);
                    setToken("Admin-Email",res.email)
                    setToken("ZJS-7579-Admin-Token",res.Token)

					Router.push("/");
				}
			})
			.catch((err) => {
				console.log(err);
			});
	};

	const onVerifyVal = (e: any) => {
		setVerify(e.target.value);
	};

    //注册
	const handleVerify = () => {
		let data = {
			email: email,
			password: password,
			verify: verify,
		};
		Login(data)
			.then((res: any) => {
				console.log(res);
				//setIsLogin(res.isLogin)
				if (res.isLogin) {
		            setSuccessSection(true);
                    setToken("Admin-Email",res.email)
                    setToken("ZJS-7579-Admin-Token",res.Token)
					Router.push("/");
				}
			})
			.catch((err) => {
				console.log(err);
			});

	};


	return (
		<>
			<Head>
				<title>Login</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main>
				<div className='back'>
					{isAlert?<div
						className='alert alert-warning alert-dismissible fade show'
						role='alert'
					>
						{alertText}
						<span
							aria-hidden='true'
							style={{ cursor: "pointer", float: "right" }}
                            onClick={()=>setAlert(false)}
						>
							&times;
						</span>
					</div>:""}
				</div>
				<div className='registration-form'>
					<header>
						<h1>
							Login
							<span
								style={{ float: "right", cursor: "pointer" }}
							>
								<i className='fa fa-qrcode'>
									<div className='help-tip'>
										<p>二维码</p>
									</div>
								</i>
							</span>
						</h1>
						<p>登录 / 注册 </p>
					</header>
					<form>
						<div
							className={
								emailSection
									? "input-section email-section fold-up"
									: "input-section email-section "
							}
						>
							<input
								className='email'
								type='email'
								placeholder='邮箱'
								value={email}
								onChange={onEmailVal}
							/>
							<div className='animated-button'>
								<span
									className={
										reg.test(email)
											? "icon-paper-plane next"
											: "icon-paper-plane"
									}
								>
									<i className='fa fa-envelope-o'></i>
								</span>
								<span
									className='next-button email'
									style={{ cursor: reg.test(email) ? "pointer" : "none" }}
									onClick={handleEmail}
								>
									<i className='fa fa-arrow-up'></i>
								</span>
							</div>
						</div>

						<div
							className={
								emailSection
									? "input-section password-section"
									: "input-section password-section folded"
							}
						>
							<input
								className='password'
								type='password'
								placeholder='密码'
								value={password}
								onChange={onPasswordVal}
							/>
							<div className='animated-button'>
								<span
									className={
										password.length >= 6 ? "icon-lock next" : "icon-lock"
									}
								>
									<i className='fa fa-lock'></i>
								</span>
								<span
									className='next-button password'
									style={{ cursor: password.length >= 6 ? "pointer" : "none" }}
									onClick={handlePassword}
								>
									<i className='fa fa-arrow-up'></i>
								</span>
							</div>
						</div>

						{!isLogin ? (
							<div
								className={
									passwordSection
										? "input-section repeat-password-section"
										: "input-section repeat-password-section folded"
								}
							>
								<input
									className='repeat-password'
									type='text'
									placeholder='验证码'
									value={verify}
									onChange={onVerifyVal}
								/>

								<div className='animated-button'>
									<span
										className={
											verify.length == 8
												? "icon-repeat-lock next"
												: "icon-repeat-lock"
										}
									>
										<i className='fa fa-comment'></i>
									</span>
									<span
										className='next-button repeat-password'
										style={{ cursor: verify.length == 8 ? "pointer" : "none" }}
										onClick={handleVerify}
									>
										<i className='fa fa-paper-plane'></i>
									</span>
								</div>
							</div>
						) : (
							""
						)}

						<div
							className='success'
							style={{ marginTop: successSection ? "0" : "none" }}
						>
							<p>登录中，请稍后。。。</p>
						</div>
					</form>
				</div>
			</main>
		</>
	);
}
